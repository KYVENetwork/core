import { Runtime, StorageProvider, Cache } from "./types";
import { setupLogger, setupName, logNodeInfo, syncPoolState } from "./methods";
import KyveSDK, { KyveClient, KyveLCDClientType } from "@kyve/sdk";
import { Logger } from "tslog";
import { kyve } from "@kyve/proto";
declare class Node {
    protected runtime: Runtime;
    protected storageProvider: StorageProvider;
    protected cache: Cache;
    protected sdk: KyveSDK;
    protected client: KyveClient;
    protected query: KyveLCDClientType;
    protected logger: Logger;
    protected coreVersion: string;
    protected pool: kyve.registry.v1beta1.kyveRegistry.Pool;
    protected poolConfig: object;
    protected name: string;
    protected poolId: number;
    protected mnemonic: string;
    protected keyfile: string;
    protected initialStake: string;
    protected network: string;
    protected verbose: boolean;
    protected setupLogger: typeof setupLogger;
    protected setupName: typeof setupName;
    protected logNodeInfo: typeof logNodeInfo;
    protected syncPoolState: typeof syncPoolState;
    constructor();
    addRuntime(runtime: Runtime): this;
    addStorageProvider(storageProvider: StorageProvider): this;
    addCache(cache: Cache): this;
    run(): Promise<void>;
}
export default Node;
